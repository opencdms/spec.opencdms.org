{
  "title": "Climate software",
  "text": "As discussed in the article by the UK Parliament Science and Technology Committee (2011), one of the recommendations of the UK parliamentary review of the Climategate issue was to ensure that climate scientists make available the full methodological workings (including computer codes) used to support their work. An extract is reproduced below.\n\n> It is not standard practice in climate science to publish the raw data and the computer code in academic papers. However, climate science is a matter of great importance and the quality of the science should be irreproachable. We therefore consider that climate scientists should take steps to make available all the data that support their work (including raw data) and full methodological workings (including the computer codes).\n\nThis has implications for the effective management of climate data and software in that software source code will also require careful management.\n\nIn addition, it will be necessary to keep track of the time period during which each software version is in operation, as this may also have implications for climate data and climate analysis.\n\nOn a conceptual level, this is similar in a way to the need to have effective observations metadata that describe the maintenance of sensors and stations.",
  "components": [
    "4.6.3.1",
    "4.6.3.2",
    "4.6.3.3",
    "4.6.3.4"
  ],
  "copyright": "World Meteorological Organization, 2014",
  "reference": "WMO-No. 1131",
  "version": "1.0",
  "4.6.3.1": {
    "title": "Source code management",
    "text": "This component deals with managing the source code of the software used to process climate data. This component should have the following capabilities at a minimum:\n1. Maintain a library of a variety of software source code.\n2. Manage different versions (or branches) of the software concurrently, with the ability to maintain each version independently and to easily backport newer functionalities to an older version.\n3. Easily detect the differences between software versions.",
    "classification": "Recommended"
  },
  "4.6.3.2": {
    "title": "Package management",
    "text": "This component refers to the functionality that facilitates the packaging of software and its configuration for installation on a computer. In addition, the component should facilitate dependency management to ensure that all required supporting software is also installed and configured appropriately at installation time.",
    "classification": "Recommended"
  },
  "4.6.3.3": {
    "title": "Environment configuration",
    "text": "This component concerns the functionality that facilitates the recording and management of information relating to any changes to operational software.\n\nThis includes:\n1. What software was deployed on what server?\n2. What version of the software was deployed?\n3. Details of any configuration changes.\n4. Details of any change made to the operational software.\n5. Details of the decommission of the software at the end of its period of operation, including decommission date.",
    "classification": "Recommended"
  },
  "4.6.3.4": {
    "title": "Software testing",
    "text": "This component covers the testing of software that is to be deployed to manipulate climate data.\n\nThis includes:\n1. Details of test plans and individual test cases, including user-acceptance testing.\n2. Details of the test data, database, etc.\n3. Details of test systems and environment.\n4. Details of test results and artefacts, particularly proof that the test data were not affected by the software or a change to the software.",
    "classification": "Recommended"
  }
}